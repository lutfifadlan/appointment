# Build stage
FROM node:22-alpine AS builder

WORKDIR /app

# Install build dependencies needed for sqlite3
RUN apk add --no-cache python3 make g++ gcc sqlite-dev

# Copy package files
COPY package*.json ./

# Install all dependencies (including devDependencies for build)
RUN npm ci && npm cache clean --force

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Test stage
FROM builder AS test

# Run tests
RUN npm test

# Local development stage
FROM node:22-alpine AS development

# Install build dependencies needed for sqlite3
RUN apk add --no-cache python3 make g++ gcc sqlite-dev

WORKDIR /app

# Copy package files, built app, and node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/src ./src

# Expose port
EXPOSE 8088

# Copy our custom wait script
COPY wait-for-db.sh /usr/local/bin/wait-for-db.sh
RUN chmod +x /usr/local/bin/wait-for-db.sh

# Use our custom wait script to wait for PostgreSQL before starting the app
CMD ["/bin/sh", "-c", "/usr/local/bin/wait-for-db.sh postgres 5432 npm run start:dev"]
